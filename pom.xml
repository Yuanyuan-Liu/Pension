<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.8.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <groupId>com.circle</groupId>
    <artifactId>pension</artifactId>
    <version>1.0.0</version>
    <name>pension</name>
    <description>Demo project for Spring Boot</description>

    <properties>
        <!-- 如果需要JDK 11，请勿注释此项。注释此项后默认使用JDK 8 -->
        <!--<java.version>11</java.version>-->
        <!-- 其他公共属性自动继承 spring-boot-starter-parent 配置 -->
        <project.version>1.0.0</project.version>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <swagger2.version>2.9.2</swagger2.version>
        <pagehelper.version>1.2.10</pagehelper.version>
        <druid.version>1.1.14</druid.version>
        <common-lang3.version>3.8.1</common-lang3.version>
        <lombok.version>1.18.6</lombok.version>
        <!-- 打包跳过测试 因为测试打包会报错┭┮﹏┭┮ 也可以使用 mvn clean package -DskipTests 命令 -->
        <skipTests>true</skipTests>
    </properties>

    <dependencies>


        <!-- spring boot 核心starters 优先采用SpringBoot的Starters -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!-- 通过Spring AOP、AspectJ面向切面编程 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <!--springboot程序测试依赖，如果是自动创建项目默认添加-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- 数据库相关 -->
        <!-- mysql数据库驱动 -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <scope>runtime</scope>
        </dependency>
        <!-- alibaba的druid数据库连接池 访问地址：http://localhost:8080/druid -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid-spring-boot-starter</artifactId>
            <version>${druid.version}</version>
        </dependency>

        <!-- 添加common lang3依赖-->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.5</version>
        </dependency>

        <!-- 接口文档相关 -->
        <!-- 添加swagger2 使用新的springfox框架 -->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>${swagger2.version}</version>
        </dependency>
        <!-- swagger2-UI http://localhost:8080/swagger-ui.html -->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>${swagger2.version}</version>
        </dependency>

        <!-- lombok代码生成插件 -->
        <!--提供@Slf4j(类上注解@Slf4j后直接使用log对象) @Data(自动生成get set tostring hashcode equals等方法) @AllArgsConstructor(提供一个全参的构造方法)等注解 -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- Apache  commons-lang3工具类-->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${common-lang3.version}</version>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <!-- 打包jar -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

</project>
